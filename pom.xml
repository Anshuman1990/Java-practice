<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com</groupId>
	<artifactId>Java-Practice</artifactId>
	<version>1.0-SNAPSHOT</version>

	<!--        <repositories>-->
	<!--        <repository>-->
	<!--            <id>snapshots-repo</id>-->
	<!--            <url>https://oss.sonatype.org/content/repositories/snapshots</url>-->
	<!--            <releases>-->
	<!--                <enabled>false</enabled>-->
	<!--            </releases>-->
	<!--            <snapshots>-->
	<!--                <enabled>true</enabled>-->
	<!--            </snapshots>-->
	<!--        </repository>-->
	<!--        <repository>-->
	<!--            <id>dev.davidsoergel.com releases</id>-->
	<!--            <url>http://dev.davidsoergel.com/nexus/content/repositories/releases</url>-->
	<!--            <snapshots>-->
	<!--                <enabled>false</enabled>-->
	<!--            </snapshots>-->
	<!--        </repository>-->
	<!--        <repository>-->
	<!--            <id>dev.davidsoergel.com snapshots</id>-->
	<!--            <url>http://dev.davidsoergel.com/nexus/content/repositories/snapshots</url>-->
	<!--            <releases>-->
	<!--                <enabled>false</enabled>-->
	<!--            </releases>-->
	<!--        </repository>-->
	<!--    </repositories>-->

	<!--    <distributionManagement>-->
	<!--        <snapshotRepository>-->
	<!--            <id>sonatype-nexus-snapshots</id>-->
	<!--            <name>Sonatype Nexus snapshot repository</name>-->
	<!--            <url>https://oss.sonatype.org/content/repositories/snapshots</url>-->
	<!--        </snapshotRepository>-->
	<!--        <repository>-->
	<!--            <id>nexus-releases</id>-->
	<!--            <name>Nexus Release Repository</name>-->
	<!--            <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>-->
	<!--        </repository>-->
	<!--    </distributionManagement>-->

	<properties>
		<!-- Change the nd4j.backend property to nd4j-cuda-7.5-platform or nd4j-cuda-8.0-platform
            to use CUDA GPUs -->
		<nd4j.backend>nd4j-native-platform</nd4j.backend>
		<!--<nd4j.backend>nd4j-cuda-8.0-platform</nd4j.backend> -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<shadedClassifier>bin</shadedClassifier>


		<java.version>11.0.5</java.version>
		<nd4j.version>0.9.1</nd4j.version>
		<dl4j.version>0.9.1</dl4j.version>
		<datavec.version>0.9.1</datavec.version>
		<arbiter.version>0.9.1</arbiter.version>
		<rl4j.version>0.9.1</rl4j.version>

		<!-- For Spark examples: change the _1 to _2 to switch between Spark 1
            and Spark 2 -->
		<dl4j.spark.version>0.9.1_spark_1</dl4j.spark.version>
		<datavec.spark.version>0.9.1_spark_1</datavec.spark.version>

		<!-- Scala binary version: DL4J's Spark and UI functionality are released
            with both Scala 2.10 and 2.11 support -->
		<scala.binary.version>2.11</scala.binary.version>

		<hadoop.version>2.2.0
		</hadoop.version>  <!-- Hadoop version used by Spark 1.6.3 and 2.2.1 (and likely others) -->
		<guava.version>19.0</guava.version>
		<logback.version>1.1.7</logback.version>
		<jfreechart.version>1.0.13</jfreechart.version>
		<jcommon.version>1.0.23</jcommon.version>
		<maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
		<maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
		<exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
		<maven.minimum.version>3.3.1</maven.minimum.version>
		<javafx.version>2.2.3</javafx.version>
		<aws.sdk.version>1.11.109</aws.sdk.version>
		<jackson.version>2.6.6</jackson.version>
		<scala.plugin.version>3.2.2</scala.plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-native-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-cuda-7.5-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-cuda-8.0-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>

			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-bom</artifactId>
				<version>1.11.1000</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-dynamodb</artifactId>
		</dependency>
		<!-- ND4J backend. You need one in every DL4J project. Normally define
            artifactId as either "nd4j-native-platform" or "nd4j-cuda-7.5-platform" -->
		<!--		<dependency>-->
		<!--			<groupId>org.nd4j</groupId>-->
		<!--			<artifactId>${nd4j.backend}</artifactId>-->
		<!--			<version>${nd4j.version}</version>-->
		<!--		</dependency>-->

		<!--		&lt;!&ndash; Core DL4J functionality &ndash;&gt;-->
		<!--		<dependency>-->
		<!--			<groupId>org.deeplearning4j</groupId>-->
		<!--			<artifactId>deeplearning4j-core</artifactId>-->
		<!--			<version>${dl4j.version}</version>-->
		<!--		</dependency>-->

		<!--		<dependency>-->
		<!--			<groupId>org.deeplearning4j</groupId>-->
		<!--			<artifactId>deeplearning4j-nlp</artifactId>-->
		<!--			<version>${dl4j.version}</version>-->
		<!--		</dependency>-->

		<!--		<dependency>-->
		<!--			<groupId>org.deeplearning4j</groupId>-->
		<!--			<artifactId>deeplearning4j-zoo</artifactId>-->
		<!--			<version>${dl4j.version}</version>-->
		<!--		</dependency>-->

		<!--		&lt;!&ndash; deeplearning4j-ui is used for visualization: see http://deeplearning4j.org/visualization &ndash;&gt;-->
		<!--		<dependency>-->
		<!--			<groupId>org.deeplearning4j</groupId>-->
		<!--			<artifactId>deeplearning4j-ui_${scala.binary.version}</artifactId>-->
		<!--			<version>${dl4j.version}</version>-->
		<!--		</dependency>-->

		<!--		&lt;!&ndash; ParallelWrapper & ParallelInference live here &ndash;&gt;-->
		<!--		<dependency>-->
		<!--			<groupId>org.deeplearning4j</groupId>-->
		<!--			<artifactId>deeplearning4j-parallel-wrapper_${scala.binary.version}</artifactId>-->
		<!--			<version>${dl4j.version}</version>-->
		<!--		</dependency>-->


		<!--		&lt;!&ndash; Arbiter - used for hyperparameter optimization (grid/random search) &ndash;&gt;-->
		<!--		<dependency>-->
		<!--			<groupId>org.deeplearning4j</groupId>-->
		<!--			<artifactId>arbiter-deeplearning4j</artifactId>-->
		<!--			<version>${arbiter.version}</version>-->
		<!--		</dependency>-->

		<!--		<dependency>-->
		<!--			<groupId>org.deeplearning4j</groupId>-->
		<!--			<artifactId>arbiter-ui_2.11</artifactId>-->
		<!--			<version>${arbiter.version}</version>-->
		<!--		</dependency>-->

		<!--		&lt;!&ndash; datavec-data-codec: used only in video example for loading video data &ndash;&gt;-->
		<!--		<dependency>-->
		<!--			<artifactId>datavec-data-codec</artifactId>-->
		<!--			<groupId>org.datavec</groupId>-->
		<!--			<version>${datavec.version}</version>-->
		<!--		</dependency>-->

		<!-- Used in the feedforward/classification/MLP* and feedforward/regression/RegressionMathFunctions
            example -->
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>${jfreechart.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jcommon</artifactId>
			<version>${jcommon.version}</version>
		</dependency>

		<!--		&lt;!&ndash; Used for downloading data in some of the examples &ndash;&gt;-->
		<!--		<dependency>-->
		<!--			<groupId>org.apache.httpcomponents</groupId>-->
		<!--			<artifactId>httpclient</artifactId>-->
		<!--			<version>4.3.5</version>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.googlecode.htmlcompressor/htmlcompressor -->
		<dependency>
			<groupId>com.googlecode.htmlcompressor</groupId>
			<artifactId>htmlcompressor</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>4.1</version>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>3.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.reactivestreams</groupId>
			<artifactId>reactive-streams</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.reactivestreams</groupId>
			<artifactId>reactive-streams-tck</artifactId>
			<version>1.0.2</version>
			<scope>test</scope>
		</dependency>
		<!--                <dependency>-->
		<!--                    <groupId>edu.berkeley.compbio</groupId>-->
		<!--                    <artifactId>jlibsvm</artifactId>-->
		<!--                    <version>0.911</version>-->
		<!--                </dependency>-->
		<!--		&lt;!&ndash; https://mvnrepository.com/artifact/org.apache.poi/poi &ndash;&gt;-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.17</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/tw.edu.ntu.csie/libsvm -->
		<dependency>
			<groupId>tw.edu.ntu.csie</groupId>
			<artifactId>libsvm</artifactId>
			<version>3.17</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openpnp/opencv -->
		<dependency>
			<groupId>org.openpnp</groupId>
			<artifactId>opencv</artifactId>
			<version>3.2.0-0</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/edu.stanford.nlp/stanford-corenlp -->
		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
			<version>3.9.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-core -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>4.0.7</version>
		</dependency>

		<!--		&lt;!&ndash; https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 &ndash;&gt;-->
		<!--		<dependency>-->
		<!--			<groupId>org.apache.commons</groupId>-->
		<!--			<artifactId>commons-lang3</artifactId>-->
		<!--			<version>3.9</version>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>org.neo4j.driver</groupId>
			<artifactId>neo4j-java-driver</artifactId>
			<version>1.7.2</version>
		</dependency>

		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-bolt</artifactId>
			<version>4.0.0</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-encryption-sdk-java</artifactId>
			<version>2.4.0</version>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>9</source>
					<target>9</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>